#
#   Makefile for Tinker-HP
#
RunF77 = mpif90 
MKLDIR = /opt/intel/mkl/
FFTDIR = /usr/local/fftw-3.3.4
LIB_FFT = -L$(FFTDIR)/lib -lfftw3
FFTDECOMPDIR = ../2decomp_fft/
FFTDECOMP = -I$(FFTDECOMPDIR)/include -L$(FFTDECOMPDIR)/lib -l2decomp_fft $(LIB_FFT)
BLAS   = -I$(MKLDIR)/include  -L$(MKLDIR)/lib/intel64 -lmkl_intel_lp64 -lmkl_intel_thread -lmkl_core -liomp5 -lpthread -lm
FFLAGS = -O3 -xHost -openmp -no-ipo -no-prec-div -assume cc_omp -inline -mcmodel=medium -shared-intel -heap-arrays
#FFLAGS = -O3 -xHost -openmp -no-ipo -no-prec-div -assume cc_omp -check uninit -check pointers -check bounds -traceback -inline -g -mcmodel=medium -shared-intel 
LIBS   = libtinker.a 
OBJSAM = active.o analysis.o analyze.o angles.o\
   attach.o basefile.o beeman.o bicubic.o\
   bitors.o bonds.o bounds.o calendar.o\
   chkpole.o chkring.o chkxyz.o cholesky.o\
   command.o commstuff.o control.o cspline.o\
   cutoffs.o diis.o drivermpi.o dynamic.o\
   eangang.o eangang1.o eangang3.o\
   eangle.o eangle1.o eangle3.o\
   ebond.o ebond1.o ebond3.o\
   egeom.o egeom1.o egeom3.o\
   ehal.o ehal1.o ehal3.o\
   eimprop.o eimprop1.o eimprop3.o\
   eimptor.o eimptor1.o eimptor3.o\
   elj.o elj1.o elj3.o\
   empole.o empole0.o empole1.o empole1pme.o empole3.o\
   energy.o eopbend.o eopbend1.o eopbend3.o\
   eopdist.o eopdist1.o eopdist3.o\
   epitors.o epitors1.o epitors3.o\
   erf.o estrbnd.o estrbnd1.o estrbnd3.o\
   estrtor.o estrtor1.o estrtor3.o\
   etors.o etors1.o etors3.o\
   etortor.o etortor1.o etortor3.o\
   eurey.o eurey1.o eurey3.o\
   evcorr.o fatal.o fft_mpi.o field.o\
   final.o freeunit.o geometry.o getkey.o\
   getnumb.o getprm.o getstring.o gettext.o\
   getword.o getxyz.o gradient.o groups.o\
   grpline.o hybrid.o image.o inertia.o\
   initatom.o initial.o initprm.o initres.o\
   invert.o jacobi.o kangang.o kangle.o\
   katom.o kbond.o kewald.o kgeom.o\
   kimprop.o kimptor.o kinetic.o kmpole.o\
   kopbend.o kopdist.o kpitors.o kpolar.o\
   kstrbnd.o kstrtor.o ktors.o ktortor.o\
   kurey.o kvdw.o lattice.o lbfgs.o\
   linalg.o maxwell.o mdinit.o mdrest.o\
   mdsave.o mdstat.o mechanic.o minimize.o\
   molecule.o mutate.o\

OBJSNZ = nblist.o newinduce_pme.o newinduce_pme2.o\
   nextarg.o nexttext.o nspline.o number.o\
   numeral.o openend.o optsave.o pmestuff.o\
   precise.o pressure.o prime.o prmkey.o\
   promo.o prtdyn.o prtxyz.o random.o readdyn.o\
   readprm.o readxyz.o replica.o respa.o\
   rings.o rotpole.o search.o sort.o\
   suffix.o switch.o temper.o testgrad.o\
   torphase.o torque.o torsions.o trimtext.o\
   unitcell.o verlet.o version.o

OBJS   = $(OBJSAM) $(OBJSNZ)

all: libtinker analyze dynamic testgrad minimize

everything: libtinker analyze dynamic testgrad

analyze: $(OBJS)
	./library.make
	$(RunF77) $(FFLAGS) $(FFLAGS2) -o analyze.x analyze.o $(LIBS) $(BLAS) $(FFTDECOMP)
	strip analyze.x
	mkdir -p ../bin
	mv analyze.x ../bin/analyze
#
dynamic: $(OBJS)
	./library.make
	$(RunF77) $(FFLAGS) $(FFLAGS2) -o dynamic.x dynamic.o $(LIBS) $(BLAS) $(FFTDECOMP)
	strip dynamic.x
	mkdir -p ../bin
	mv dynamic.x ../bin/dynamic
#
testgrad: $(OBJS)
	./library.make
	$(RunF77) $(FFLAGS) $(FFLAGS2) -o testgrad.x testgrad.o $(LIBS) $(BLAS) $(FFTDECOMP)
	strip testgrad.x
	mkdir -p ../bin
	mv testgrad.x ../bin/testgrad
#
minimize: $(OBJS)
	./library.make
	$(RunF77) $(FFLAGS) $(FFLAGS2) -o minimize.x minimize.o $(LIBS) $(BLAS) $(FFTDECOMP)
	strip minimize.x
	mkdir -p ../bin
	mv minimize.x ../bin/minimize
#
libtinker: $(OBJS)
	./library.make
#
%.o: %.f
	$(RunF77) $(FFLAGS) -c $*.f 
%.o: %.F
	$(RunF77) $(FFLAGS) -c $*.F
%.o: %.f90
	$(RunF77) $(FFLAGS) -c $*.f90 $(FFTDECOMP)
#	$(RunF77) $(FFLAGS) -c $*.f90 -I/$(FFTDIR)/include $(FFTDECOMP)
#
clean:
	rm -fr $(OBJS) *.exe
	rm -f libtinker.a 
	rm -f ../bin/analyze ../bin/dynamic ../bin/minimize ../bin/testgrad
#
tags: tags-mark
	-'rm' -f tags
	ctags *.f
	-'rm' -f tags-mark

tags-mark:
	touch tags-mark

debug:
	cat *.f > xxx.f
	ftnchek xxx.f
	rm xxx.f
